---
import { Icon } from 'astro-icon/components';
import { getLangFromUrl, languages } from '../i18n/utils';
const lang = getLangFromUrl(Astro.url)
const langInfo = languages[lang]
---
<nav class="text-lg bg-base-color">
  <div class="text-lg max-sm:text-base flex">
    <p class="flex items-center gap-ch">
      portfolio.md
      <Icon name="catppuccin:markdown" size={18} class="**:stroke-current w-ch-2" />
    </p>
    {/* TODO: button to go to section */}
    {/* TODO: default value */}
    <p id="nav-heading" class="px-ch text-maroon font-medium">
    </p>
  </div>
  <div class="bg-mantle text-lg max-sm:text-base flex">
    <a href="https://github.com/Diego-0110/portfolio" target="_blank"
      class="px-ch bg-blue text-base-color font-bold">
      Diego
    </a>
    <a href="https://github.com/Diego-0110/portfolio/tree/stable" target="_blank"
      class="flex items-center px-ch bg-surface-0 text-blue font-medium">
      <Icon name="tabler:git-branch" size={18} class="**:stroke-current w-ch-2" />
      stable
    </a>
    <div class="flex ml-auto bg-surface-0 text-blue font-medium">
      <a href={`/${lang === 'es'? languages.en.slug : languages.es.slug}`}
      class="flex items-center px-ch">
        <Icon name="tabler:language" size={18} class="**:stroke-current w-ch-2" />
        {langInfo.shortName}
      </a>
      <p class="select-none">
        |
      </p>
      <div class="flex items-center">
        <input type="checkbox"
          id="lightmode-checkbox" name="lightmode" class="peer"
          hidden
        >
        <label for="lightmode-checkbox"
          class="px-ch select-none cursor-pointer peer-checked:*:first:hidden peer-not-checked:*:nth-[2]:hidden">
          <Icon name="tabler:moon-stars" size={18} class="**:stroke-current w-ch-2" />
          <Icon name="tabler:sun" size={18} class="**:stroke-current w-ch-2" />
        </label>
      </div>
    </div>
  </div>
</nav>
<script>
// Change content for span#nav-heading when hash in url change

const element = document.querySelector('#nav-heading')
if (element && location.hash.slice(1)) {
  element.textContent = '## ' + location.hash.slice(1)
}
window.addEventListener('hashchange', () => {
  const element = document.querySelector('#nav-heading')
  if (element) {
    element.textContent = '## ' + location.hash.slice(1)
  }
})

// Light/Dark mode Logic

const lightmodeCheckbox = document.querySelector('#lightmode-checkbox') as HTMLInputElement
// If 'lightmode' is not set, then use dark color scheme.
if (localStorage.getItem('lightmode')) {
  lightmodeCheckbox.checked = true
  document.documentElement.classList.add('light')
}

lightmodeCheckbox.addEventListener('change',
  (evt) => {
    const element = evt.currentTarget as HTMLInputElement
    if (element) {
      if (element.checked) {
        document.documentElement.classList.add('light')
        localStorage.setItem('lightmode', 'true')
      } else {
        document.documentElement.classList.remove('light')
        localStorage.setItem('lightmode', '')
      }
    }
  })
</script>
